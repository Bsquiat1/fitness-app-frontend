{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase3/phase-3-project-frontend/src/components/WorkoutPlanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutPlanner = () => {\n  _s();\n  const [exercises, setExercises] = useState([]);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [sets, setSets] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [workouts, setWorkouts] = useState([]);\n  const [workoutId, setWorkoutId] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:9292/workouts').then(response => response.json()).then(data => setWorkouts(data)).catch(error => console.log(error));\n  }, [workouts]); // Trigger re-fetching when workouts state changes\n\n  useEffect(() => {\n    fetch('http://localhost:9292/exercises').then(response => response.json()).then(data => setExercises(data)).catch(error => console.log(error));\n  }, []);\n  const handleExerciseChange = e => {\n    setSelectedExercise(e.target.value);\n  };\n  const handleSetsChange = e => {\n    setSets(parseInt(e.target.value, 10));\n  };\n  const handleRepsChange = e => {\n    setReps(parseInt(e.target.value, 10));\n  };\n  const handleDurationChange = e => {\n    setDuration(parseInt(e.target.value, 10));\n  };\n  const handleAddExercise = () => {\n    const exerciseToAdd = exercises.find(exercise => exercise.id === selectedExercise);\n    if (exerciseToAdd) {\n      const exerciseWithDetails = {\n        ...exerciseToAdd,\n        sets,\n        reps,\n        duration\n      };\n      fetch('http://localhost:9292/workouts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(exerciseWithDetails)\n      }).then(response => response.json()).then(data => {\n        console.log('Workout posted successfully!');\n        setWorkouts([...workouts, data]); // Add the new workout to the state\n        setSelectedExercise('');\n        setSets(0);\n        setReps(0);\n        setDuration(0);\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Workout Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Exercise:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExercise,\n        onChange: handleExerciseChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: exercise.id,\n          children: exercise.name\n        }, exercise.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sets,\n        onChange: handleSetsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: reps,\n        onChange: handleRepsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Duration (in seconds):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: duration,\n        onChange: handleDurationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExercise,\n        children: \"Add Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Workout Exercises:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: workouts.map(exercise => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [exercise.name, \" - Sets: \", exercise.sets, \", Reps: \", exercise.reps, \", Duration: \", exercise.duration, \" seconds\"]\n      }, exercise.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutPlanner, \"D+QmJJxfklLXmoTa/n6fqfVinWA=\");\n_c = WorkoutPlanner;\nexport default WorkoutPlanner;\nvar _c;\n$RefreshReg$(_c, \"WorkoutPlanner\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WorkoutPlanner","_s","exercises","setExercises","selectedExercise","setSelectedExercise","sets","setSets","reps","setReps","duration","setDuration","workouts","setWorkouts","workoutId","setWorkoutId","fetch","then","response","json","data","catch","error","console","log","handleExerciseChange","e","target","value","handleSetsChange","parseInt","handleRepsChange","handleDurationChange","handleAddExercise","exerciseToAdd","find","exercise","id","exerciseWithDetails","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","name","type","onClick","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase3/phase-3-project-frontend/src/components/WorkoutPlanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WorkoutPlanner = () => {\n  const [exercises, setExercises] = useState([]);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [sets, setSets] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [workouts, setWorkouts] = useState([]);\n  const [workoutId, setWorkoutId] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:9292/workouts')\n      .then((response) => response.json())\n      .then((data) => setWorkouts(data))\n      .catch((error) => console.log(error));\n  }, [workouts]); // Trigger re-fetching when workouts state changes\n\n  useEffect(() => {\n    fetch('http://localhost:9292/exercises')\n      .then((response) => response.json())\n      .then((data) => setExercises(data))\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleExerciseChange = (e) => {\n    setSelectedExercise(e.target.value);\n  };\n\n  const handleSetsChange = (e) => {\n    setSets(parseInt(e.target.value, 10));\n  };\n\n  const handleRepsChange = (e) => {\n    setReps(parseInt(e.target.value, 10));\n  };\n\n  const handleDurationChange = (e) => {\n    setDuration(parseInt(e.target.value, 10));\n  };\n\n  const handleAddExercise = () => {\n    const exerciseToAdd = exercises.find((exercise) => exercise.id === selectedExercise);\n    if (exerciseToAdd) {\n      const exerciseWithDetails = {\n        ...exerciseToAdd,\n        sets,\n        reps,\n        duration,\n      };\n\n      fetch('http://localhost:9292/workouts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(exerciseWithDetails),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log('Workout posted successfully!');\n          setWorkouts([...workouts, data]); // Add the new workout to the state\n          setSelectedExercise('');\n          setSets(0);\n          setReps(0);\n          setDuration(0);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Workout Planner</h2>\n      <div>\n        <label>Select Exercise:</label>\n        <select value={selectedExercise} onChange={handleExerciseChange}>\n          <option value=\"\">Select an exercise</option>\n          {exercises.map((exercise) => (\n            <option key={exercise.id} value={exercise.id}>\n              {exercise.name}\n            </option>\n          ))}\n        </select>\n        <label>Sets:</label>\n        <input type=\"number\" value={sets} onChange={handleSetsChange} />\n        <label>Reps:</label>\n        <input type=\"number\" value={reps} onChange={handleRepsChange} />\n        <label>Duration (in seconds):</label>\n        <input type=\"number\" value={duration} onChange={handleDurationChange} />\n        <button onClick={handleAddExercise}>Add Exercise</button>\n      </div>\n      <h3>Workout Exercises:</h3>\n      <ul>\n        {workouts.map((exercise) => (\n          <li key={exercise.id}>\n            {exercise.name} - Sets: {exercise.sets}, Reps: {exercise.reps}, Duration: {exercise.duration} seconds\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WorkoutPlanner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}